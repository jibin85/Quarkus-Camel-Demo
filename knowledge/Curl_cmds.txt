title: http req to File store
module: quakus-rest-service-9090
route: rest-msg-send-service-route
curl -X POST http://localhost:9090/store -d \
"Hello Mic testing 1"

title: MRP Calculation with JSON http request
module: quakus-rest-service-9090
route: json-mrp-price-calculation-route
curl -X POST http://localhost:9090/api/calculate-price -H 'Content-Type: application/json' -d \
'{
    "originalRate": 100.00
}'

title: JSON validation
module: quakus-rest-service-9090
route: json-validation-route
curl -X POST http://localhost:9090/jsonValidation -H "Content-Type: application/json" -d \
'{"name": "Jibin Thomas"}' 

title: JSON http integration with org
module: quakus-rest-service-9090
route: rest-http-integration-route
curl -X POST http://localhost:9090/proxy/http-backend -H "Content-Type: application/json" -d \
'{"name": "Jibin Thomas"}'

title: JSON http integration with localhost:7070
module: quakus-rest-service-9090
route: rest-msg-send-service-route
curl -X POST http://localhost:9090/proxy/localhost-backend -d \
"Jibin Thomas" 

title: XML http validation
module: quakus-rest-service-6060
route: xml-mrp-price-calculation-route
curl -X POST http://localhost:6060/api/price -H 'Content-Type: application/xml' -d \
'<priceRequest>
    <originalPrice>100.00</originalPrice>
</priceRequest>'

title: JSON gmail integration - plain text
module: quakus-email-integration
route: text-mail-route
curl -X POST http://localhost:7272/email/text -H "Content-Type: application/json" -d '@-' << EOF
{
  "to": "nt.jibin85@gmail.com",
  "subject": "Test Email",
  "content": "This is a test email"
}
EOF


title: JSON gmail integration - HTML format
module: quakus-email-integration
route: html-mail-route
curl -X POST http://localhost:7272/email/html -H "Content-Type: application/json" -d "@-" << EOF
{
  "to": "nt.jibin85@gmail.com",
  "subject": "HTML Test Email",
  "content": "<html><body><h1 style='color: blue;'>Hello!</h1><p>This is a <b>formatted</b> test email with HTML.</p></body></html>"
}
EOF

		# First, save the HTML content to a file
		cat > about-me-dark-theme.html << 'HTMLEOF'
		<!DOCTYPE html>
		<html lang="en">
		<!-- Your entire HTML content here -->
		</html>
		HTMLEOF

		or if you already have the file use this format

		# Then send the email using the HTML file content
curl -X POST http://localhost:7272/email/html \
-H "Content-Type: application/json" \
-d "@-" << EOF
{
  "to": "nt.jibin85@gmail.com",
  "subject": "HTML Test Email",
  "content": "$(cat about-me-dark-theme.html | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')"
}
EOF

title: JSON gmail integration - plain text
module: quakus-email-integration
route: attachment-mail-route
	1. Create a test PDF file first

		# Create a simple text file named test.txt
		echo "This is a test document" > test.txt


	2. Convert file to Base64

		# This command converts your file to base64 and saves it in encoded.txt
		base64 test.txt > encoded.txt

		# You can verify the content
		cat encoded.txt
		# It will show something like: VGhpcyBpcyBhIHRlc3QgZG9jdW1lbnQK


	3. Send the email with attachment
		Here's the simplified version first:

curl -X POST http://localhost:7272/email/attachment -H "Content-Type: application/json" -d "@-" << EOF
{
	"to": "nt.jibin85@gmail.com",
	"subject": "Test Email with Attachment",
	"content": "Please find the attached document.",
	"attachmentName": "test.txt",
	"attachmentContent": "$(cat encoded.txt)",
	"attachmentContentType": "text/plain"
}
EOF

title: Rest-SOAP-Integration
module: quakus-soap-integration
route: rest-soap-integration-route
To Check the Wsdl is fine:

	curl -X GET http://localhost:8686/services/weather?wsdl

To Initiate the Process:

	curl -X GET "http://localhost:8686/weather/London/UK"

To Check via SOAP request:

curl -X POST http://localhost:8686/services/weather \
	 -H "Content-Type: text/xml;charset=UTF-8" \
     -H "SOAPAction: http://weather.example.com/getWeather" \
     -d '
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                  xmlns:web="http://weather.example.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:getWeatherRequest>
         <city>London</city>
         <country>UK</country>
      </web:getWeatherRequest>
   </soapenv:Body>
</soapenv:Envelope>'


title: Swagger-Integration
module: quakus-swagger-integration
route: default-greeting-route
# Get default greeting
curl -X GET "http://localhost:9393/api/greeting" -H "accept: application/json"

route: personal-greeting-route
# Get personalized greeting
curl -X GET "http://localhost:9393/api/greeting/John" -H "accept: application/json"

route: create-greeting-route
# Create custom greeting
curl -X POST "http://localhost:9393/api/greeting" \
  -H "accept: application/json" \
  -H "Content-Type: application/json" \
  -d '{"message": "Hi there!", "language": "en"}'

route: update-greeting-route
# Update greeting for a name
curl -X PUT "http://localhost:9393/api/greeting/John" \
  -H "accept: application/json" \
  -H "Content-Type: application/json" \
  -d '{"message": "Hey there!", "language": "en"}'

Testing with URL-encoded characters (for names with spaces):
```bash
curl -X GET "http://localhost:9393/api/greeting/John%20Doe" -H "accept: */*"
```

URLs:

	http://localhost:9393/api/greeting/Jibin

	http://localhost:9393/openapi

	http://localhost:9393/swagger-ui
	
	
	
title: h2-in-mem-database
module: quarkus-h2-integration
route: get-all-users-route
# Get All Users
curl http://localhost:9494/users

route: get-user-by-id-route
# Get User by ID (replace 1 with actual ID)
curl http://localhost:9494/users/1

route: create-user-route
# Create User
curl -X POST http://localhost:9494/users \
     -H "Content-Type: application/json" \
     -d '{"name":"Jibin Thomas","email":"jibin.thomas@gmail.com"}'
	 
route: update-user-route
# Update User (replace 1 with actual ID)
curl -X PUT http://localhost:9494/users/1 \
     -H "Content-Type: application/json" \
     -d '{"name":"Jibin Thomas","email":"jibin.2.thomas1999@gmail.com"}'
	 
route: delete-user-route
# Delete User (replace 1 with actual ID)
curl -X DELETE http://localhost:9494/users/1